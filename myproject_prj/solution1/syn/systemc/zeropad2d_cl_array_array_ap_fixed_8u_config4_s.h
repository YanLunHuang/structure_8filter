// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _zeropad2d_cl_array_array_ap_fixed_8u_config4_s_HH_
#define _zeropad2d_cl_array_array_ap_fixed_8u_config4_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct zeropad2d_cl_array_array_ap_fixed_8u_config4_s : public sc_module {
    // Port declarations 58
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_data_0_V_TDATA;
    sc_in< sc_logic > data_V_data_0_V_TVALID;
    sc_out< sc_logic > data_V_data_0_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_1_V_TDATA;
    sc_in< sc_logic > data_V_data_1_V_TVALID;
    sc_out< sc_logic > data_V_data_1_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_2_V_TDATA;
    sc_in< sc_logic > data_V_data_2_V_TVALID;
    sc_out< sc_logic > data_V_data_2_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_3_V_TDATA;
    sc_in< sc_logic > data_V_data_3_V_TVALID;
    sc_out< sc_logic > data_V_data_3_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_4_V_TDATA;
    sc_in< sc_logic > data_V_data_4_V_TVALID;
    sc_out< sc_logic > data_V_data_4_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_5_V_TDATA;
    sc_in< sc_logic > data_V_data_5_V_TVALID;
    sc_out< sc_logic > data_V_data_5_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_6_V_TDATA;
    sc_in< sc_logic > data_V_data_6_V_TVALID;
    sc_out< sc_logic > data_V_data_6_V_TREADY;
    sc_in< sc_lv<16> > data_V_data_7_V_TDATA;
    sc_in< sc_logic > data_V_data_7_V_TVALID;
    sc_out< sc_logic > data_V_data_7_V_TREADY;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<16> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_lv<16> > res_V_data_4_V_din;
    sc_in< sc_logic > res_V_data_4_V_full_n;
    sc_out< sc_logic > res_V_data_4_V_write;
    sc_out< sc_lv<16> > res_V_data_5_V_din;
    sc_in< sc_logic > res_V_data_5_V_full_n;
    sc_out< sc_logic > res_V_data_5_V_write;
    sc_out< sc_lv<16> > res_V_data_6_V_din;
    sc_in< sc_logic > res_V_data_6_V_full_n;
    sc_out< sc_logic > res_V_data_6_V_write;
    sc_out< sc_lv<16> > res_V_data_7_V_din;
    sc_in< sc_logic > res_V_data_7_V_full_n;
    sc_out< sc_logic > res_V_data_7_V_write;


    // Module declarations
    zeropad2d_cl_array_array_ap_fixed_8u_config4_s(sc_module_name name);
    SC_HAS_PROCESS(zeropad2d_cl_array_array_ap_fixed_8u_config4_s);

    ~zeropad2d_cl_array_array_ap_fixed_8u_config4_s();

    sc_trace_file* mVcdFile;

    regslice_both<16>* regslice_both_data_V_data_0_V_U;
    regslice_both<16>* regslice_both_data_V_data_1_V_U;
    regslice_both<16>* regslice_both_data_V_data_2_V_U;
    regslice_both<16>* regslice_both_data_V_data_3_V_U;
    regslice_both<16>* regslice_both_data_V_data_4_V_U;
    regslice_both<16>* regslice_both_data_V_data_5_V_U;
    regslice_both<16>* regslice_both_data_V_data_6_V_U;
    regslice_both<16>* regslice_both_data_V_data_7_V_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_V_data_0_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln90_fu_316_p2;
    sc_signal< sc_logic > data_V_data_1_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_4_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_5_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_6_V_TDATA_blk_n;
    sc_signal< sc_logic > data_V_data_7_V_TDATA_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln81_fu_292_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln86_fu_304_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln99_fu_368_p2;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_V_data_5_V_blk_n;
    sc_signal< sc_logic > res_V_data_6_V_blk_n;
    sc_signal< sc_logic > res_V_data_7_V_blk_n;
    sc_signal< sc_lv<3> > j_fu_298_p2;
    sc_signal< sc_logic > io_acc_block_signal_op31;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<2> > i_fu_310_p2;
    sc_signal< sc_lv<2> > i_reg_391;
    sc_signal< sc_logic > io_acc_block_signal_op43;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<2> > j_2_fu_322_p2;
    sc_signal< sc_logic > io_acc_block_signal_op54;
    sc_signal< sc_logic > io_acc_block_signal_op63;
    sc_signal< sc_logic > io_acc_block_signal_op66;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<3> > j_1_fu_374_p2;
    sc_signal< sc_logic > io_acc_block_signal_op75;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<3> > j_0_reg_248;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<2> > i1_0_reg_259;
    sc_signal< sc_lv<2> > j3_0_reg_270;
    sc_signal< sc_lv<3> > j6_0_reg_281;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > regslice_both_data_V_data_0_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_0_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_0_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_0_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_0_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_1_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_1_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_1_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_1_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_1_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_2_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_2_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_2_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_2_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_2_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_3_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_3_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_3_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_3_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_3_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_4_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_4_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_4_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_4_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_4_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_5_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_5_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_5_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_5_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_5_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_6_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_6_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_6_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_6_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_6_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_V_data_7_V_U_apdone_blk;
    sc_signal< sc_lv<16> > data_V_data_7_V_TDATA_int;
    sc_signal< sc_logic > data_V_data_7_V_TVALID_int;
    sc_signal< sc_logic > data_V_data_7_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_V_data_7_V_U_ack_in;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_V_data_0_V_TDATA_blk_n();
    void thread_data_V_data_0_V_TREADY();
    void thread_data_V_data_0_V_TREADY_int();
    void thread_data_V_data_1_V_TDATA_blk_n();
    void thread_data_V_data_1_V_TREADY();
    void thread_data_V_data_1_V_TREADY_int();
    void thread_data_V_data_2_V_TDATA_blk_n();
    void thread_data_V_data_2_V_TREADY();
    void thread_data_V_data_2_V_TREADY_int();
    void thread_data_V_data_3_V_TDATA_blk_n();
    void thread_data_V_data_3_V_TREADY();
    void thread_data_V_data_3_V_TREADY_int();
    void thread_data_V_data_4_V_TDATA_blk_n();
    void thread_data_V_data_4_V_TREADY();
    void thread_data_V_data_4_V_TREADY_int();
    void thread_data_V_data_5_V_TDATA_blk_n();
    void thread_data_V_data_5_V_TREADY();
    void thread_data_V_data_5_V_TREADY_int();
    void thread_data_V_data_6_V_TDATA_blk_n();
    void thread_data_V_data_6_V_TREADY();
    void thread_data_V_data_6_V_TREADY_int();
    void thread_data_V_data_7_V_TDATA_blk_n();
    void thread_data_V_data_7_V_TREADY();
    void thread_data_V_data_7_V_TREADY_int();
    void thread_i_fu_310_p2();
    void thread_icmp_ln81_fu_292_p2();
    void thread_icmp_ln86_fu_304_p2();
    void thread_icmp_ln90_fu_316_p2();
    void thread_icmp_ln99_fu_368_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op31();
    void thread_io_acc_block_signal_op43();
    void thread_io_acc_block_signal_op54();
    void thread_io_acc_block_signal_op63();
    void thread_io_acc_block_signal_op66();
    void thread_io_acc_block_signal_op75();
    void thread_j_1_fu_374_p2();
    void thread_j_2_fu_322_p2();
    void thread_j_fu_298_p2();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_res_V_data_4_V_blk_n();
    void thread_res_V_data_4_V_din();
    void thread_res_V_data_4_V_write();
    void thread_res_V_data_5_V_blk_n();
    void thread_res_V_data_5_V_din();
    void thread_res_V_data_5_V_write();
    void thread_res_V_data_6_V_blk_n();
    void thread_res_V_data_6_V_din();
    void thread_res_V_data_6_V_write();
    void thread_res_V_data_7_V_blk_n();
    void thread_res_V_data_7_V_din();
    void thread_res_V_data_7_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
